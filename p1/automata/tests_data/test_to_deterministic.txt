Test Case 1:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  q0[shape=circle]
  qf[shape=doublecircle]

  __start_point__ -> q0
  q0 -> qf[label="0"]
  qf -> qf[label="1"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  Empty[shape=circle]
  qf[shape=doublecircle]
  q0[shape=circle]

  __start_point__ -> q0
  q0 -> qf[label="0"]
  q0 -> Empty[label="1"]
  qf -> Empty[label="0"]
  qf -> qf[label="1"]
  Empty -> Empty[label="0"]
  Empty -> Empty[label="1"]
}


Test Case 2:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  B[shape=doublecircle]

  __start_point__ -> A
  A -> B[label="0"]
  B -> B[label="0"]
  B -> B[label="1"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  Empty[shape=circle]
  B[shape=doublecircle]

  __start_point__ -> A
  A -> B[label="0"]
  A -> Empty[label="1"]
  B -> B[label="0"]
  B -> B[label="1"]
  Empty -> Empty[label="0"]
  Empty -> Empty[label="1"]
}


Test Case 3:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  B[shape=doublecircle]

  __start_point__ -> A
  A -> A[label="0"]
  A -> A[label="1"]
  A -> B[label="1"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  AB[shape=doublecircle]

  __start_point__ -> A
  A -> A[label="0"]
  A -> AB[label="1"]
  AB -> A[label="0"]
  AB -> AB[label="1"]
}


Test Case 4:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  B[shape=circle]
  C[shape=doublecircle]

  __start_point__ -> A
  A -> A[label="0"]
  A -> B[label="0"]
  A -> A[label="1"]
  B -> C[label="1"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  AB[shape=circle]
  AC[shape=doublecircle]

  __start_point__ -> A
  A -> AB[label="0"]
  A -> A[label="1"]
  AB -> AB[label="0"]
  AB -> AC[label="1"]
  AC -> AB[label="0"]
  AC -> A[label="1"]
}


Test Case 5:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  B[shape=circle]
  C[shape=doublecircle]

  __start_point__ -> A
  A -> A[label="0"]
  A -> A[label="1"]
  A -> B[label="1"]
  B -> C[label="0"]
  B -> C[label="1"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  A[shape=circle]
  ABC[shape=doublecircle]
  AB[shape=circle]
  AC[shape=doublecircle]

  __start_point__ -> A
  A -> A[label="0"]
  A -> AB[label="1"]
  AB -> AC[label="0"]
  AB -> ABC[label="1"]
  AC -> A[label="0"]
  AC -> AB[label="1"]
  ABC -> AC[label="0"]
  ABC -> ABC[label="1"]
}


Test Case 6:

Recived:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  q0[shape=circle]
  q1[shape=circle]
  q2[shape=doublecircle]

  __start_point__ -> q0
  q0 -> q0[label="0"]
  q0 -> q1[label="1"]
  q0 -> q0[label="1"]
  q1 -> q2[label="0"]
}

Processed:
digraph {
  rankdir=LR;

  node [shape = point]; __start_point__
  q0q2[shape=doublecircle]
  q0q1[shape=circle]
  q0[shape=circle]

  __start_point__ -> q0
  q0 -> q0[label="0"]
  q0 -> q0q1[label="1"]
  q0q1 -> q0q2[label="0"]
  q0q1 -> q0q1[label="1"]
  q0q2 -> q0[label="0"]
  q0q2 -> q0q1[label="1"]
}


